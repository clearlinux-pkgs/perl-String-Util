#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : perl-String-Util
Version  : 1.26
Release  : 4
URL      : https://cpan.metacpan.org/authors/id/M/MI/MIKO/String-Util-1.26.tar.gz
Source0  : https://cpan.metacpan.org/authors/id/M/MI/MIKO/String-Util-1.26.tar.gz
Summary  : 'String::Util -- String processing utilities'
Group    : Development/Tools
License  : Artistic-1.0 Artistic-1.0-Perl GPL-1.0
Requires: perl-String-Util-license = %{version}-%{release}
Requires: perl-String-Util-perl = %{version}-%{release}
BuildRequires : buildreq-cpan
BuildRequires : perl(Number::Misc)
BuildRequires : perl(Test::Toolbox)

%description
NAME
String::Util -- String processing utilities
SYNOPSIS
use String::Util ':all';

# "crunch" whitespace and remove leading/trailing whitespace
$val = crunch($val);

# does this value have "content", i.e. it's defined
# and has something besides whitespace?
if (hascontent $val) {...}

# format for display in a web page
$val = htmlesc($val);

# format for display in a web page table cell
$val = cellfill($val);

# remove leading/trailing whitespace
$val = trim($val);

# ensure defined value
$val = define($val);

# repeat string x number of times
$val = repeat($val, $iterations);

# remove leading/trailing quotes
$val = unquote($val);

# remove all whitespace
$val = no_space($val);

# remove trailing \r and \n, regardless of what
# the OS considers an end-of-line
$val = fullchomp($val);

# or call in void context:
fullchomp $val;

# encrypt string using random seed
$val = randcrypt($val);

# are these two values equal, where two undefs count as "equal"?
if (eqq $a, $b) {...}

# are these two values different, where two undefs count as "equal"?
if (neqq $a, $b) {...}

# get a random string of some specified length
$val = randword(10);

%package dev
Summary: dev components for the perl-String-Util package.
Group: Development
Provides: perl-String-Util-devel = %{version}-%{release}
Requires: perl-String-Util = %{version}-%{release}

%description dev
dev components for the perl-String-Util package.


%package license
Summary: license components for the perl-String-Util package.
Group: Default

%description license
license components for the perl-String-Util package.


%package perl
Summary: perl components for the perl-String-Util package.
Group: Default
Requires: perl-String-Util = %{version}-%{release}

%description perl
perl components for the perl-String-Util package.


%prep
%setup -q -n String-Util-1.26
cd %{_builddir}/String-Util-1.26

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
if test -f Makefile.PL; then
%{__perl} Makefile.PL
make  %{?_smp_mflags}
else
%{__perl} Build.PL
./Build
fi

%check
export LANG=C.UTF-8
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
make TEST_VERBOSE=1 test

%install
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/perl-String-Util
cp %{_builddir}/String-Util-1.26/LICENSE %{buildroot}/usr/share/package-licenses/perl-String-Util/a1f666cec80d835a358658aaaf60d4a864dc068c
if test -f Makefile.PL; then
make pure_install PERL_INSTALL_ROOT=%{buildroot} INSTALLDIRS=vendor
else
./Build install --installdirs=vendor --destdir=%{buildroot}
fi
find %{buildroot} -type f -name .packlist -exec rm -f {} ';'
find %{buildroot} -depth -type d -exec rmdir {} 2>/dev/null ';'
find %{buildroot} -type f -name '*.bs' -empty -exec rm -f {} ';'
%{_fixperms} %{buildroot}/*

%files
%defattr(-,root,root,-)

%files dev
%defattr(-,root,root,-)
/usr/share/man/man3/String::Util.3

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/perl-String-Util/a1f666cec80d835a358658aaaf60d4a864dc068c

%files perl
%defattr(-,root,root,-)
/usr/lib/perl5/vendor_perl/5.30.3/String/Util.pm
/usr/lib/perl5/vendor_perl/5.30.3/String/Util.pod
